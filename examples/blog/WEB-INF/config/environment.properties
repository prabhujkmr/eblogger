###############################################################################
#
# Note: 
#
#   1. This file contains properties for the framework. 
#   2. Optional properties are optional. 
#
#   Author: Chen Fei
###############################################################################

###############################################################################
#
#   Required Section
#
###############################################################################
site.admin.username=admin
site.admin.password=40be4e59b9a2a2b5dffb918c0e86b3d7

###############################################################################
#
#   Default Section (Optional)
#
#   The following is a list of parameters that you can config:
#
#   model.class.prefix: 
#       -Specifies prefix of package name of model classes.
#       -Default value is models.
#       -Example: 
#           model.class.prefix=com.blog.models
#           model.class.prefix=models
#
#   model.class.suffix: 
#       -Specifies suffix of package name of model classes.
#       -Default value is empty.
#       -Example: 
#           model.class.suffix=
#
#   controller.class.prefix: 
#       -Specifies prefix of package name of controller classes.
#       -Default value is controllers.
#       -Example: 
#           controller.class.prefix=com.blog.controllers
#           controller.class.prefix=controllers 
#
#   controller.class.suffix: 
#       -Specifies suffix of package name of controller classes.
#       -Default value is Controller.
#       -Example: 
#           controller.class.suffix=Controller
#
#   auto.crud: 
#       -Specifies whether to use default the built-in CRUD controller 
#        class in the absense of a controller. Use true for quick 
#        prototyping or demo situation only.
#       -Default value is false: auto.crud=false
#
#   action.extension: 
#       -Specifies extension for an action url. 
#        By default, Scooter uses RestfulRequestProcessor which uses url 
#        extension as a format of response message. If you need to use pure 
#        action-based url, you should set action.extension to a specific action 
#        word and also replace RestfulRequestProcessor by BaseRequestProcessor 
#        in web.xml.
#       -Default value is empty: action.extension=
#       -Examples of pure action-based urls: 
#        an url with extention .do --> /blog/posts/edit.do 
#        an url with no extension  --> /blog/posts/list
#       -The disadvantage of using action.extension is that you lose the 
#        benefit of RESTful routes and resources that come with the 
#        RestfulRequestProcessor. 
#
#   default.action.method:
#       -Specifies default action method of a controller class to use when 
#        the action name is not detected. 
#       -Default value is index: default.action.method=index
#
#   allow.default.action.method: 
#       -Specifies if a default action name is used when an action method is 
#        not obtained by parsing a url.
#       -Default value is true: allow.default.action.method=true
#
#   webpage.directory.name: 
#       -Specifies directory name for web pages.
#        This must be either an empty string or a directory directly 
#        under the webapps directory.
#       -Default value is WEB-INF/views: webpage.directory.name=WEB-INF/views
#
#   allow.forward.to.controller.name.view.when.controller.not.exist: 
#       -Specifies what to do when a request is not associated with a controller. 
#       -When set to true, the request is forwarded to a view of the same 
#        name as the controller/action name when the controller doesn't exist. 
#       -Default value is true: 
#        allow.forward.to.controller.name.view.when.controller.not.exist=true
#
#   allow.forward.to.action.name.view.when.action.not.exist: 
#       -Specifies what to do when a request is not associated with an action. 
#       -When set to true, the request is forwarded to a view of the same 
#        name as the action name when the controller class doesn't have the 
#        action method. 
#       -Default value is true: 
#        allow.forward.to.action.name.view.when.action.not.exist=true
#
#   view.extension: 
#       -Specifies file extension for view files. 
#       -Default value is jsp: view.extension=jsp
#
#   root.url: 
#       -Specifies the root url.
#       -The root view is "index.jsp" which is a jsp file directly under 
#        the /WEB-INF/views directory. If you want the root view file to be 
#        under webapps/YourAppName, then set root.url=index.jsp
#       -Default value is jsp: root.url=/WEB-INF/views/index.jsp
#
#   running.environment: 
#       -Specifies the type of running environment.
#       -Three running environments are supported:
#        DEVELOPMENT (default), TEST, PRODUCTION
#       -Default value is DEVELOPMENT: running.environment=DEVELOPMENT
#
#   password.scheme: 
#       -Specifies the password scheme used to encrypt a password.
#       -Default value is empty: password.scheme=
#       -Examples: password.scheme=md5
#
#   benchmark: 
#       -Specifies whether to measure benchmark time
#       -Default value is false: benchmark=false
#
#   benchmark.in.header: 
#       -Specifies whether to output benchmark time in response header.
#       -This is not recommended for Production environment as it will 
#        increase cost of performance.
#       -Default value is true: benchmark.in.header=true
#
#   I18N support:
#   Use ISO Language Code for locale.language and ISO Country Code for locale.country. 
#   See Java Doc of java.util.Locale for more details on language, country and variant.
#   If locale.language is not set, the language is Locale.getDefault().getLanguage().
#   If locale.country is not set, the country is Locale.getDefault().getCountry().
#   If locale.variant is not set, the variant is Locale.getDefault().getVariant().
#   locale.language=
#   locale.country=
#   locale.variant=
#
#   message.resources.file.base: 
#       -Specifies base name for message resources files.
#       -Default value is messages: message.resources.file.base=messages
#
#   app.error.page.uri: 
#       -Specifies error page uri.
#        Error page uri must be relative to current servlet context, with or 
#        without a leading slash.
#       -Default value is /WEB-INF/views/error.jsp: 
#        app.error.page.uri=/WEB-INF/views/error.jsp
#
#   allow.displaying.error.details: 
#       -Specifies whether to allow dislaying error details in error page. 
#       -Default value is true: allow.displaying.error.details=true
#
#   allow.databrowser: 
#       -Specifies whether to allow the built-in data browser.
#       -Default value is true: allow.databrowser=true
#
#   additional.mimetypes: 
#       -Allows to add more extention/mimetype mappings if the default 
#        mapping is not enough or not accurate.
#       -Use ':' to separate extension and mimetype and 
#       -Use ',' to separate each extension/mimetype pair.
#       -Default value is empty: additional.mimetypes=
#       -Example: 
#        additional.mimetypes=xml:text/xml, json:text/plain, pdf:application/pdf
#
#   additional.single.plural: 
#       -Allows to add more single/plural words if WordUtil is not enough 
#        in resolving plurals.
#       -Use ':' to separate single and plural words and 
#       -Use ',' to separate each single/plural pair.
#       -Default value is empty: additional.single.plural=
#       -Example: 
#        additional.single.plural=box:boxes, thesis:theses
#
################################################################################
controller.class.prefix=blog.controllers
model.class.prefix=blog.models

################################################################################
#
#   Plugin Registration Section
#
#   Note:
#       1. Register a plugin here if you want Scooter to manager its life cycle.
#       2. You may list properties of a plugin here also or simply put them in 
#          a properties file under the plugin directory.
#       3. <name> and <plugin_class> are required properties. And the <name> 
#          must be unique across all plugins registered here.
#       4. Cache providers are treated as plugins. See next section below.
#   
#   Generic format:
#    plugin.<name>=\
#        plugin_class=full name of a subclass of com.scooterframework.admin.Plugin,\
#        other_property_name=other_value,\
#        more_property_name=more_value
#
#   All content handlers: 
#        plugin.content.handler.{content format}
#
#   All template handlers: 
#        plugin.template.handler.{template extension}
#
#   Examples:
#    Configure a pdf plugin to handle content in pdf format:
#    plugin.content.handler.pdf=\
#        plugin_class=com.example.pdf.MyPDFHandlerPlugin,\
#        max_file_size=10000,\
#        time_out=2000
#
#    Configure a dryml template handler plugin to handle templates with .dryml extension:
#    plugin.template.handler.dryml=\
#        plugin_class=com.example.template.DrymlTemplateHandler,\
#        other_property_name=other_value,\
#        more_property_name=more_value
#
#    Configure a freemarker template handler plugin to handle templates with .ftl extension:
#    plugin.template.handler.ftl=\
#        plugin_class=plugin.freemarker.FreeMarkerTemplateHandler
#
#    If templates are all under a special directory, use templates.dir property:
#    plugin.template.handler.ftl=\
#        plugin_class=plugin.freemarker.FreeMarkerTemplateHandler,\
#        templates.dir=c:\\templates
#
################################################################################


################################################################################
#
#   Cache Provider Definitions Section
#
#   Note:
#       1. Scooter provides several cache providers as plugins.
#       2. You can roll in your own cache provider implementation very easily 
#          by extending the CacheProvider class. See example 2 below.
#
#   Property names supported by Scooter's built-in cache providers:
#       plugin_class: full class name of cache provider class
#       configFile: optional, config file name such as ehcache.xml
#       namespace: optional
#       urls: required for memcached-powered cache providers, 
#             multiple urls can be listed here separated by space
#       expiresInSeconds: optional, how long should the object stay in cache
#       requestTimeoutInSeconds: optional, how long should a request waits 
#                 for response from cache server.
#
#
#   Examples:
#   
#   1. Configure a EhCache-powered cache provider for Blog:
#    plugin.cache.provider.blog_development=\
#        plugin_class=plugin.ehcache.EhCacheCacheProvider,\
#        configFile=ehcache.xml, \
#        useDefaultCacheNameIfAbsent=true, \
#        defaultCacheName=MyAppName
#   
#   2. Configure a memcached-powered cache provider for Pet Store:
#    plugin.cache.provider.jpetstore=\
#        plugin_class=com.scooterframework.cache.SpyMemcachedCacheProvider,\
#        namespace=jpetstore,\
#        urls=localhost:11211,\
#        expiresInSeconds=3600,\
#        requestTimeoutInSeconds=60
#   
#   3. Configure a cache provider with its own properties:
#    plugin.cache.provider.jpetstore=\
#        plugin_class=com.example.MyCacheProvider,\
#        namespace=jpetstore,\
#        urls=localhost:11211,\
#        myproperty1=value1,\
#        myproperty2=value2
#
################################################################################
#
#-------------------------------------------------------------------------------
#    Modify and uncomment the following if using a cache provider.
#-------------------------------------------------------------------------------
#
#    plugin.cache.provider.blog_development=\
#        plugin_class=plugin.ehcache.EhCacheCacheProvider,\
#        configFile=ehcache.xml
#
#    plugin.cache.provider.blog_test=\
#        plugin_class=com.scooterframework.cache.SpyMemcachedCacheProvider,\
#        namespace=blog,\
#        urls=localhost:11211,\
#        expiresInSeconds=3600,\
#        requestTimeoutInSeconds=60
#
#    plugin.cache.provider.blog_production=\
#        plugin_class=com.scooterframework.cache.SpyMemcachedCacheProvider,\
#        namespace=blog,\
#        urls=localhost:11211 localhost:11212,\
#        expiresInSeconds=3600,\
#        requestTimeoutInSeconds=60

################################################################################
#
#   Cache Configuration Section
#
#   Note: 
#       Use the following properties to set global and local settings 
#       of using cache:
#
#       default.cache.provider.name: 
#           -Specifies default cache provider name.
#           -It must be one the plugin.cache.provider.XXX defined in this 
#            same file.
#           -This property must be set if using Cache.
#
#       default.cache.name: 
#           -Specifies default cache name to be used by DefaultCacheStore class.
#           -Default value is the same as the application context name.
#
#       useRequestCache: 
#           -Specifies global setting of using Thread Cache.
#           -Default value is true.
#
#       useSecondLevelCache: 
#           -Specifies global setting of using Second-Level Cache.
#           -Default value is false.
#
#       flushCacheOnChange: 
#           -Specifies global setting of flushing cache after a delete or 
#            an insert or update.
#           -Default value is true.
#
#       allowCacheAssociatedObjects: 
#           -Specifies global setting of caching associated objects.
#           -Default value is false.
#
#       localUseCacheExceptions: 
#           -A comma separated full class method names that are exceptional 
#            cases of the global cache setting determined by the result of 
#            (useRequestCache || useSecondLevelCache).
#           -Default value is null which means using global cache usage setting. 
#           -Example: 
#               localUseCacheExceptions=blog.model.Post.findAll,blog.model.Comment.findAll
#
#               This means if cache is used (useRequestCache=true or 
#               useSecondLevelCache=true), then only results from the 
#               findAll() methods of Post and Comment model are NOT cached.
#
#       localFlushCacheExceptions: 
#           -A comma separated full class method names that are exceptional 
#            cases of the global cache setting determined by flushCacheOnChange.
#           -Default value is null which means using global cache flush setting. 
#           -Example: 
#               localFlushCacheExceptions=blog.model.Post.deleteById,blog.model.Comment.deleteById
#
#               This means if flushCacheOnChange is set to true globally, then 
#               calling deleteById() methods of Post and Comment model 
#               will not flush cache.
#
################################################################################
#
#default.cache.provider.name=blog_development
#default.cache.name=blog
#
#useRequestCache=true
#useSecondLevelCache=false
#flushCacheOnChange=true
#allowCacheAssociatedObjects=false;
#localUseCacheExceptions=
#localFlushCacheExceptions=
#

################################################################################
#
#   File Upload Section (Optional)
#
#   upload.file.repository: 
#       specifies a file directory for storing uploaded files 
#       when the item size exceed the threshold.
#
#   maximum.bytes.per.uploaded.file.in.memory: 
#       specifies a threshold, in bytes, below which items will be retained in 
#       memory and above which they will be stored as a file. 
#       The default value is 10240 bytes. 
#
#   maximum.total.bytes.per.upload.request: 
#       specifies maximum allowed bytes of a complete upload request. 
#       The default value of -1 indicates, that there is no limit.
#
#   maximum.bytes.per.uploaded.file: 
#       specifies maximum allowed bytes of a single upload file.
#       The default value of -1 indicates, that there is no limit.
#
################################################################################
#upload.file.repository=null
#maximum.bytes.per.uploaded.file.in.memory=10240
#maximum.total.bytes.per.upload.request=-1
#maximum.bytes.per.uploaded.file=-1
